version: '3'
services:
  traefik:
    image: traefik:latest
    container_name: bitrix-traefik
    restart: unless-stopped
#    logging:
#      driver: loki
#      options:
#        loki-url: "http://0.0.0.0:3100/loki/api/v1/push"
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./../data/traefik/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./../conf/traefik/traefik-no-ssl.yml:/traefik.yml:ro
    command:
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.rule: Host(`traefik.${MAIN_HOST}`)
      traefik.http.routers.traefik.entrypoints: http
      #      traefik.http.routers.traefik.entrypoints: https
      #      traefik.http.routers.traefik.tls: true
      #      traefik.http.routers.traefik.tls.certresolver: letsEncrypt
      traefik.http.routers.traefik.service: api@internal
      traefik.http.services.traefik.loadbalancer.server.port: 80

      #      traefik.http.routers.http-catchall.rule: hostregexp(`{host:.+}`)
      #      traefik.http.routers.http-catchall.entrypoints: http
      #      traefik.http.routers.http-catchall.middlewares: redirect-to-https@docker
      #      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https

      # basic auth
      traefik.http.middlewares.test-auth.basicauth.users: '${TRAEFIK_CREDENTIALS}'
      traefik.http.routers.traefik.middlewares: test-auth
    networks:
      - bitrix
